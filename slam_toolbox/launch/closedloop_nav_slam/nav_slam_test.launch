<launch>
  <arg name="mode" default="mapping"/>
  <arg name="vis" default="false"/>
  <arg name="output_pose_topic" default="/slam/pose"/>
  <arg name="output_odometry_topic" default="/slam/odom"/>
  <arg name="map_frame" default="slam_map"/>
  <arg name="map_name" default="/slam_map"/>
  <arg name="invert_tf" default="false"/>
  <arg name="transform_publish_period" default="0.05"/>
  <!-- Uncomment the following block if using laser filter pkg. -->
  <!-- <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="laser_filter">
    <rosparam command="load" file="$(find slam_toolbox)/config/hokuyo_filter_config.yaml" />
  </node> -->

  <!-- Add command 

    "2> >(grep -v TF_REPEATED_DATA buffer_core)" 
    
    at the end of the launch command to avoid tf warnings, ref: https://answers.ros.org/question/377796/tf_repeated_data-ignoring-data-with-redundant-timestamp-for-frame-link_left_wheel-at-time-618268000-according-to-authority-unknown_publisher/ -->
 
  <!-- slam_toolbox mapping -->
  <group if="$(eval arg('mode') == 'mapping')">
    <node pkg="slam_toolbox" type="async_slam_toolbox_node" name="slam_toolbox" output="screen">
      <rosparam command="load" file="$(find slam_toolbox)/config/closedloop_mapping.yaml" />
      <param name="map_frame" value="$(arg map_frame)"/>
      <param name="map_name" value="$(arg map_name)"/>
      <param name="invert_tf" value="$(arg invert_tf)"/>
      <param name="transform_publish_period" value="$(arg transform_publish_period)"/>
      <remap from="~pose" to="$(arg output_pose_topic)"/>
      <remap from="~odom" to="$(arg output_odometry_topic)"/>
    </node>
  </group>

  <!-- slam_toolbox localization -->
  <group if="$(eval arg('mode') == 'localization')">
    <node pkg="slam_toolbox" type="localization_slam_toolbox_node" name="slam_toolbox" output="screen">
      <rosparam command="load" file="$(find slam_toolbox)/config/closedloop_localization.yaml" />
      <remap from="~pose" to="$(arg output_pose_topic)"/>
      <remap from="~odom" to="$(arg output_odometry_topic)"/>
    </node>
  </group>

  <!-- Visualization.-->
  <group if="$(arg vis)">
    <node pkg="rviz" type="rviz" name="slam_toolbox_rviz" output="screen" args="-d $(find slam_toolbox)/config/slam_toolbox_turtlebot.rviz">
    </node>
  </group>

</launch>
